# Installing required packages
packages <- c("tidyverse")
to_install <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install) > 0) install.packages(to_install)
lapply(packages, require, character.only = TRUE)
# Clean workspace
rm(list = ls())
# Define temporary directory and temporary file for zip files
tempDir <- tempdir()
tempFile <- tempfile()
options(timeout = 500)
# Define prefix, years, and variables to download
url <- "https://www2.census.gov/programs-surveys/acs/data/pums/"
years <- 2009:2022
vars <- c("SERIALNO", "PWGTP", "PUMA", "SEX", "AGEP", "FER")
for(i in 1:length(years)){
# Create url for each year
usfile.url <- paste0(url, years[i], ifelse(years[i] >= 2007, "/1-Year/csv_pus.zip", "/csv_pus.zip"))
# Download US file
download.file(url = usfile.url, destfile = tempFile)
if (years[i] >= 2006) {
# Name of csv files in zip folder
usafile <- paste0("ss", substring(years[i], 3, 4), "pusa.csv")
usbfile <- paste0("ss", substring(years[i], 3, 4), "pusb.csv")
# Unzip and read US files
usa <- read.csv(unzip(zipfile = tempFile, files = usafile, exdir = tempDir))
usb <- read.csv(unzip(zipfile = tempFile, files = usbfile, exdir = tempDir))
# Select only variables that will be used
usa <- usa %>% select(all_of(vars))
usb <- usb %>% select(all_of(vars))
# Rds file name
csvfile <- paste0("./raw_data/", "pus", years[i], ".csv")
# Consolidate
usabpr <- rbind(usa, usb)
# Save files
write.csv(usabpr, csvfile)
rm(usabpr, usa, usb)
} else {
# Name of csv files in zip folder
usfile <- paste0(ifelse(years[i] == 2000, "c2ss", "ss"),
ifelse(years[i] == 2000, "", substring(years[i], 3, 4)),
"pus.csv")
# Unzip and read US files
us <- read.csv(unzip(zipfile = tempFile, files = usfile, exdir = tempDir))
# Select only variables that will be used
us <- us %>% select(all_of(vars))
# RDS file name
csvfile <- paste0("./raw_data/", "pus", years[i], ".csv")
# Save files
write.csv(us, csvfile)
rm(us)
}
file.remove(dir(tempDir, pattern = "^ss", full.names = TRUE))
}
# Define temporary directory and temporary file for zip files
tempDir <- tempdir()
tempFile <- tempfile()
options(timeout = 500)
# Define prefix, years, and variables to download
url <- "https://www2.census.gov/programs-surveys/acs/data/pums/"
years <- 2009:2022
vars <- c("SERIALNO", "PWGTP", "PUMA", "SEX", "AGEP", "FER")
for(i in 1:length(years)){
# Create url for each year
usfile.url <- paste0(url, years[i], ifelse(years[i] >= 2007, "/1-Year/csv_pus.zip", "/csv_pus.zip"))
# Download US file
download.file(url = usfile.url, destfile = tempFile)
if (years[i] >= 2006) {
# Name of csv files in zip folder
usafile <- paste0("ss", substring(years[i], 3, 4), "pusa.csv")
usbfile <- paste0("ss", substring(years[i], 3, 4), "pusb.csv")
# Unzip and read US files
usa <- read.csv(unzip(zipfile = tempFile, files = usafile, exdir = tempDir))
usb <- read.csv(unzip(zipfile = tempFile, files = usbfile, exdir = tempDir))
# Select only variables that will be used
usa <- usa %>% select(all_of(vars))
usb <- usb %>% select(all_of(vars))
# Rds file name
csvfile <- paste0("./raw_data/pums/", "pus", years[i], ".csv")
# Consolidate
usabpr <- rbind(usa, usb)
# Save files
write.csv(usabpr, csvfile)
rm(usabpr, usa, usb)
} else {
# Name of csv files in zip folder
usfile <- paste0(ifelse(years[i] == 2000, "c2ss", "ss"),
ifelse(years[i] == 2000, "", substring(years[i], 3, 4)),
"pus.csv")
# Unzip and read US files
us <- read.csv(unzip(zipfile = tempFile, files = usfile, exdir = tempDir))
# Select only variables that will be used
us <- us %>% select(all_of(vars))
# RDS file name
csvfile <- paste0("./raw_data/pums/", "pus", years[i], ".csv")
# Save files
write.csv(us, csvfile)
rm(us)
}
file.remove(dir(tempDir, pattern = "^ss", full.names = TRUE))
}
for(i in 1:length(years)){
# Create url for each year
usfile.url <- paste0(url, years[i], ifelse(years[i] >= 2007, "/1-Year/csv_pus.zip", "/csv_pus.zip"))
# Download US file
download.file(url = usfile.url, destfile = tempFile)
if (years[i] >= 2006) {
# Name of csv files in zip folder
usafile <- paste0("ss", substring(years[i], 3, 4), "pusa.csv")
usbfile <- paste0("ss", substring(years[i], 3, 4), "pusb.csv")
# Unzip and read US files
usa <- read.csv(unzip(zipfile = tempFile, files = usafile, exdir = tempDir))
usb <- read.csv(unzip(zipfile = tempFile, files = usbfile, exdir = tempDir))
# Select only variables that will be used
usa <- usa %>% select(all_of(vars))
usb <- usb %>% select(all_of(vars))
# Rds file name
csvfile <- paste0("./raw_data/pums/", "pus", years[i], ".csv")
# Consolidate
usabpr <- rbind(usa, usb)
# Save files
write.csv(usabpr, csvfile)
rm(usabpr, usa, usb)
} else {
# Name of csv files in zip folder
usfile <- paste0(ifelse(years[i] == 2000, "c2ss", "ss"),
ifelse(years[i] == 2000, "", substring(years[i], 3, 4)),
"pus.csv")
# Unzip and read US files
us <- read.csv(unzip(zipfile = tempFile, files = usfile, exdir = tempDir))
# Select only variables that will be used
us <- us %>% select(all_of(vars))
# RDS file name
csvfile <- paste0("./raw_data/pums/", "pus", years[i], ".csv")
# Save files
write.csv(us, csvfile)
rm(us)
}
file.remove(dir(tempDir, pattern = "^ss", full.names = TRUE))
}
write.csv(usabpr, csvfile)
csvfile <- paste0("FertilityFacts/raw_data/pums/", "pus", 2009, ".csv")
write.csv(usabpr, csvfile)
# Installing required packages
packages <- c("tidyverse", "ipumsr", "data.table")
to_install <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install) > 0) install.packages(to_install)
lapply(packages, require, character.only = TRUE)
# Clean workspace
rm(list = ls())
# Set working directory
setwd("C:/Users/gustavoml/Desktop/Projects/FertilityFacts")
ddi_educ <- read_ipums_ddi("raw/usa_00004.xml")
data_educ <- read_ipums_micro(ddi_educ)
stem_codes <- c("14", "26", "27", "40")
# Fields of degree that changed codes in the CPS between 2009 and 2010
stem_detailed_codes <- c("4003", "4008", "5098")
View(data_educ)
# Adding a STEM degree dummy
data_educ <- data_educ %>%
mutate(stem_degree = case_when(is.na(DEGFIELD) ~ NA,
DEGFIELD %in% stem_codes | DEGFIELDD %in% stem_detailed_codes ~ 1,
TRUE ~ 0))
sum(is.na(data_educ$EDUCD))
data_educ %>%
mutate(educ_group = case_when(is.na(DEGFIELD) ~ NA,
EDUCD <= 64 ~ "Less than college",
EDUCD %in% c(65:71) ~ "Some college",
EDUCD %in% c(81:100) ~ "Associate's degree",
EDUCD == 101 & stem_degree == 0 ~ "Non-STEM Bachelor's",
EDUCD == 101 & stem_degree == 1 ~ "STEM Bachelor's",
EDUCD %in% c(114:115) & OCC2010 == 2100 ~ "Master's and Lawyer",
EDUCD %in% c(114:115) & OCC2010 == 3060 ~ "Master's and Doctor",
EDUCD %in% c(114:115) & !OCC2010 %in% c(2100, 3060) & stem_degree == 1 ~ "Master's and STEM major",
EDUCD %in% c(114:115) & !OCC2010 %in% c(2100, 3060) & stem_degree == 0 ~ "Master's and non-STEM major",
EDUCD == 116 ~ "PhD"),
educ_group = fct_relevel(educ_group, c("PhD", "Master's and non-STEM major", "Master's and STEM major",
"Master's and Doctor", "Master's and Lawyer", "STEM Bachelor's",
"Non-STEM Bachelor's", "Associate's degree", "Some college",
"Less than college")),
educ_group1 = case_when(EDUCD <= 64 ~ "Less than college",
EDUCD %in% c(65:100) ~ "Some college or Associate's degree",
EDUCD == 101 ~ "Bachelor's degree",
EDUCD %in% c(114:115) & OCC2010 == 2100 ~ "Master's and Lawyer",
EDUCD %in% c(114:115) & OCC2010 == 3060 ~ "Master's and Doctor",
EDUCD %in% c(114:115) & !OCC2010 %in% c(2100, 3060) ~ "Master's degree (except Lawyers and Doctors)",
EDUCD == 116 ~ "PhD"),
educ_group1 = fct_relevel(educ_group1, c("PhD", "Master's degree (except Lawyers and Doctors)",
"Master's and Doctor", "Master's and Lawyer", "Bachelor's degree",
"Some college or Associate's degree", "Less than college")))
table(data_educ$EDUC)
# Creating the education-occupation groups to generate figures
data_educ <- data_educ %>%
mutate(educ_group = case_when(is.na(DEGFIELD) ~ NA,
EDUCD <= 64 ~ "Less than college",
EDUCD %in% c(65:71) ~ "Some college",
EDUCD %in% c(81:100) ~ "Associate's degree",
EDUCD == 101 & stem_degree == 0 ~ "Non-STEM Bachelor's",
EDUCD == 101 & stem_degree == 1 ~ "STEM Bachelor's",
EDUCD %in% c(114:115) & OCC2010 == 2100 ~ "Master's and Lawyer",
EDUCD %in% c(114:115) & OCC2010 == 3060 ~ "Master's and Doctor",
EDUCD %in% c(114:115) & !OCC2010 %in% c(2100, 3060) & stem_degree == 1 ~ "Master's and STEM major",
EDUCD %in% c(114:115) & !OCC2010 %in% c(2100, 3060) & stem_degree == 0 ~ "Master's and non-STEM major",
EDUCD == 116 ~ "PhD"),
educ_group = fct_relevel(educ_group, c("PhD", "Master's and non-STEM major", "Master's and STEM major",
"Master's and Doctor", "Master's and Lawyer", "STEM Bachelor's",
"Non-STEM Bachelor's", "Associate's degree", "Some college",
"Less than college")),
educ_group1 = case_when(EDUCD <= 64 ~ "Less than college",
EDUCD %in% c(65:100) ~ "Some college or Associate's degree",
EDUCD == 101 ~ "Bachelor's degree",
EDUCD %in% c(114:115) & OCC2010 == 2100 ~ "Master's and Lawyer",
EDUCD %in% c(114:115) & OCC2010 == 3060 ~ "Master's and Doctor",
EDUCD %in% c(114:115) & !OCC2010 %in% c(2100, 3060) ~ "Master's degree (except Lawyers and Doctors)",
EDUCD == 116 ~ "PhD"),
educ_group1 = fct_relevel(educ_group1, c("PhD", "Master's degree (except Lawyers and Doctors)",
"Master's and Doctor", "Master's and Lawyer", "Bachelor's degree",
"Some college or Associate's degree", "Less than college")),
educ_group2 = case_when(EDUCD <= 64 ~ "Less than college",
EDUCD %in% c(65:100) ~ "Some college or Associate's degree",
EDUCD == 101 ~ "Bachelor's degree",
EDUCD %in% c(114:115) & OCC2010 %in% c(2100, 3060) ~ "Master's and Lawyer or Doctor",
EDUCD %in% c(114:115) & !OCC2010 %in% c(2100, 3060) ~ "Master's degree (except Lawyers and Doctors)",
EDUCD == 116 ~ "PhD"),
educ_group2 = fct_relevel(educ_group2, c("PhD", "Master's degree (except Lawyers and Doctors)",
"Master's and Lawyer or Doctor", "Bachelor's degree",
"Some college or Associate's degree", "Less than college")),
educ_simplified = case_when(EDUC < 6 ~ "< 12",
EDUC == 6 ~ "12",
EDUC %in% c(7:9) ~ "13-15",
EDUC == 10 ~ "16",
EDUC == 11 ~ "> 16"),
educ_simplified = fct_relevel(educ_simplified, c("< 12", "12", "13-15", "16", "> 16")))
# Saving intermediate dataset
path_educ = "refined/acs_educ_groups.rdata"
save(data_educ, file = path_educ)
# Installing required packages
packages <- c("tidyverse", "paletteer")
to_install <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install) > 0) install.packages(to_install)
lapply(packages, require, character.only = TRUE)
# Clean workspace
rm(list = ls())
# Set working directory
setwd("C:/Users/gustavoml/Desktop/Projects/FertilityFacts")
# Load intermediate dataset
load("refined/acs_educ_groups.rdata")
View(data_educ)
data_educ %>%
filter(!is.na(educ_group),
AGE %in% c(45)) %>%
group_by(YEAR, educ_group) %>%
summarise(n_child = weighted.mean(NCHILD, w = PERWT),
n_sample = n()) %>%
ungroup()
grouped_data %>%
ggplot(aes(x = YEAR, y = n_child, color = educ_group)) +
geom_point(size = 2.5) +
geom_line(linewidth = 0.75) +
scale_x_continuous(limits = c(2009, 2022),
breaks = seq(2009, 2022, 2)) +
scale_color_paletteer_d("ggthemes::Red_Blue_Brown") +
labs(x = "Year", y = "Average number of children", color = "Education Group:") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.line = element_line(),
axis.ticks = element_line(),
panel.grid.major = element_line(linetype = "dashed"),
panel.grid.minor = element_blank(),
legend.position = "right",
plot.caption = element_text(hjust = 0))
grouped_data <- data_educ %>%
filter(!is.na(educ_group),
AGE %in% c(45)) %>%
group_by(YEAR, educ_group) %>%
summarise(n_child = weighted.mean(NCHILD, w = PERWT),
n_sample = n()) %>%
ungroup()
grouped_data %>%
ggplot(aes(x = YEAR, y = n_child, color = educ_group)) +
geom_point(size = 2.5) +
geom_line(linewidth = 0.75) +
scale_x_continuous(limits = c(2009, 2022),
breaks = seq(2009, 2022, 2)) +
scale_color_paletteer_d("ggthemes::Red_Blue_Brown") +
labs(x = "Year", y = "Average number of children", color = "Education Group:") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.line = element_line(),
axis.ticks = element_line(),
panel.grid.major = element_line(linetype = "dashed"),
panel.grid.minor = element_blank(),
legend.position = "right",
plot.caption = element_text(hjust = 0))
table(data_educ$AGE)
grouped_data <- data_educ %>%
filter(!is.na(educ_group),
AGE %in% c(45)) %>%
group_by(YEAR, educ_group) %>%
summarise(n_child = weighted.mean(NCHILD, w = PERWT),
n_sample = n(),
total_weight = sum(PERWT)) %>%
ungroup()
View(grouped_data)
grouped_data <- data_educ %>%
filter(!is.na(educ_group),
AGE %in% c(45:55)) %>%
group_by(YEAR, educ_group) %>%
summarise(n_child = weighted.mean(NCHILD, w = PERWT),
n_sample = n(),
total_weight = sum(PERWT)) %>%
ungroup()
grouped_data %>%
ggplot(aes(x = YEAR, y = n_child, color = educ_group)) +
geom_point(size = 2.5) +
geom_line(linewidth = 0.75) +
scale_x_continuous(limits = c(2009, 2022),
breaks = seq(2009, 2022, 2)) +
scale_color_paletteer_d("ggthemes::Red_Blue_Brown") +
labs(x = "Year", y = "Average number of children", color = "Education Group:") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.line = element_line(),
axis.ticks = element_line(),
panel.grid.major = element_line(linetype = "dashed"),
panel.grid.minor = element_blank(),
legend.position = "right",
plot.caption = element_text(hjust = 0))
grouped_data <- data_educ %>%
filter(!is.na(educ_group),
AGE %in% c(43:47)) %>%
group_by(YEAR, educ_group) %>%
summarise(n_child = weighted.mean(NCHILD, w = PERWT),
n_sample = n(),
total_weight = sum(PERWT)) %>%
ungroup()
grouped_data %>%
ggplot(aes(x = YEAR, y = n_child, color = educ_group)) +
geom_point(size = 2.5) +
geom_line(linewidth = 0.75) +
scale_x_continuous(limits = c(2009, 2022),
breaks = seq(2009, 2022, 2)) +
scale_color_paletteer_d("ggthemes::Red_Blue_Brown") +
labs(x = "Year", y = "Average number of children", color = "Education Group:") +
theme_minimal() +
theme(axis.text = element_text(size = 10),
axis.line = element_line(),
axis.ticks = element_line(),
panel.grid.major = element_line(linetype = "dashed"),
panel.grid.minor = element_blank(),
legend.position = "right",
plot.caption = element_text(hjust = 0))
grouped_data %>%
ggplot(aes(x = YEAR, y = n_child, color = educ_group)) +
geom_point(size = 2.5) +
geom_line(linewidth = 0.75) +
scale_x_continuous(limits = c(2009, 2022),
breaks = seq(2009, 2022, 2)) +
scale_color_paletteer_d("ggthemes::Red_Blue_Brown") +
labs(title = "Number of own children living in HH",
x = "Year", color = "Education Group:") +
theme_minimal() +
theme(axis.title.y = element_blank(),
axis.text = element_text(size = 10),
axis.line = element_line(),
axis.ticks = element_line(),
panel.grid.major = element_line(linetype = "dashed"),
panel.grid.minor = element_blank(),
legend.position = "right",
plot.caption = element_text(hjust = 0))
